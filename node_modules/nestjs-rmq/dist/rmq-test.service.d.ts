import { OnModuleInit } from '@nestjs/common';
import { Channel } from 'amqplib';
import { IPublishOptions, IRMQServiceOptions } from '.';
import { IRMQService } from './interfaces/rmq-service.interface';
import { RMQMetadataAccessor } from './rmq-metadata.accessor';
export declare class RMQTestService implements OnModuleInit, IRMQService {
    private readonly metadataAccessor;
    private options;
    private routes;
    private logger;
    private isInitialized;
    private replyStack;
    private mockStack;
    private mockErrorStack;
    constructor(options: IRMQServiceOptions, metadataAccessor: RMQMetadataAccessor);
    onModuleInit(): Promise<void>;
    mockReply<T>(topic: string, reply: T): void;
    mockError<T>(topic: string, error: T): void;
    triggerRoute<T, R>(path: string, data: T): Promise<R>;
    init(): Promise<void>;
    ack(...params: Parameters<Channel['ack']>): ReturnType<Channel['ack']>;
    nack(...params: Parameters<Channel['nack']>): ReturnType<Channel['nack']>;
    send<IMessage, IReply>(topic: string, message: IMessage, options?: IPublishOptions): Promise<IReply>;
    notify<IMessage>(topic: string, message: IMessage, options?: IPublishOptions): Promise<void>;
    healthCheck(): boolean;
    disconnect(): Promise<void>;
    private attachEmitters;
    private intercept;
    private bindRMQRoutes;
    private useMiddleware;
    private getRouteByTopic;
    private logConnected;
}
